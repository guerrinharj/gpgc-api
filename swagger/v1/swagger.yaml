openapi: 3.0.0
info:
  title: GPGC API
  description: This is the API documentation for GPGC API
  version: 1.0.0
servers:
  - url: http://gpgc-api.onrender.com


paths:
  /api/v1/artists:
    get:
      summary: Get all artists
      description: Fetch a list of all artists
      operationId: getArtists
      tags:
        - Artists
      parameters:
        - name: Username
          in: header
          required: true
          schema:
            type: string
          example: admin
        - name: Password
          in: header
          required: true
          schema:
            type: string
          example: 123
      responses:
        '200':
          description: A list of artists
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                    name:
                      type: string
                      example: Artist Name
                    slug:
                      type: string
                      example: artist-name
                    group:
                      type: boolean
                      example: true

    post:
      summary: Create a new artist
      description: Add a new artist to the collection
      operationId: createArtist
      tags:
        - Artists
      parameters:
        - name: Username
          in: header
          required: true
          schema:
            type: string
          example: admin
        - name: Password
          in: header
          required: true
          schema:
            type: string
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: TESTE
                group:
                  type: boolean
                  example: false
      responses:
        '201':
          description: Artist created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: TESTE
                  slug:
                    type: string
                    example: teste
                  group:
                    type: boolean
                    example: false
        '401':
          description: Unauthorized

  /api/v1/artists/{slug}:
    get:
      summary: Get artist by slug
      description: Retrieve a single artist using their slug
      operationId: getArtistBySlug
      tags:
        - Artists
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: assadinhos
        - name: Username
          in: header
          required: true
          schema:
            type: string
          example: admin
        - name: Password
          in: header
          required: true
          schema:
            type: string
          example: 123
      responses:
        200:
          description: Successfully retrieved artist
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Assadinhos
                  slug:
                    type: string
                    example: assadinhos
                  group:
                    type: boolean
                    example: false
                  created_at:
                    type: string
                    format: date-time
                    example: "2024-12-30T01:57:54.455Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-12-30T01:57:54.455Z"
                  user_id:
                    type: integer
                    example: 1
                  releases:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        artist_id:
                          type: integer
                          example: 1
                        artist_name:
                          type: string
                          example: Assadinhos
                        name:
                          type: string
                          example: Winkadinka
                        slug:
                          type: string
                          example: winkadinka
                        cover:
                          type: array
                          items:
                            type: string
                          example:
                            - "https://storage.googleapis.com/gpgc-api-bucket/RELEASED/ASSADINHOS/Winkadinka/cover.jpg"
                        release_type:
                          type: string
                          example: Album
                        release_date:
                          type: string
                          format: date
                          example: "2021-09-27"
                        label:
                          type: array
                          items:
                            type: string
                          example:
                            - "40% Foda/Maneirissimo"
                        tracks:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: Smoke With The Water
                              url:
                                type: string
                                example: "https://storage.googleapis.com/gpgc-api-bucket/RELEASED/ASSADINHOS/Winkadinka/Assadinhos%20-%20Winkadinka%20-%2001%20Smoke%20With%20The%20Water.mp3"
                        format:
                          type: array
                          items:
                            type: string
                          example:
                            - "CD"
                            - "digital download"
                            - "streaming"
                        credits:
                          type: object
                          additionalProperties:
                            type: string
                          example:
                            Gabriel Guerra: keyboards, drum machine
                        notes:
                          type: array
                          items:
                            type: string
                          example:
                            - "All tracks produced by Gabriel Guerra"
                        links:
                          type: object
                          additionalProperties:
                            type: string
                          example:
                            Spotify: "https://open.spotify.com/album/3jmFD1V8Vc0x4fVVfoNbBg"
                            Bandcamp: "https://40porcentofodabarramaneirissimo.bandcamp.com/album/winkadinka"
                        created_at:
                          type: string
                          format: date-time
                          example: "2024-12-30T01:57:54.595Z"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2024-12-30T01:57:54.595Z"
                        user_id:
                          type: integer
                          example: 1
                        download_link:
                          type: string
                          example: "https://storage.googleapis.com/gpgc-api-bucket/RELEASED/ASSADINHOS/Winkadinka/Assadinhos%20-%20Winkadinka.zip"
        404:
          description: Artist not found
        401:
          description: Unauthorized
        500:
          description: Internal server error


    put:
      summary: Update an artist by slug
      description: Update an existing artist's information
      operationId: updateArtistBySlug
      tags:
        - Artists
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: teste
        - name: Username
          in: header
          required: true
          schema:
            type: string
          example: admin
        - name: Password
          in: header
          required: true
          schema:
            type: string
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: TESTE EDIT
                group:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Artist updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: TESTE EDIT
                  slug:
                    type: string
                    example: teste
                  group:
                    type: boolean
                    example: true

        '404':
          description: Artist not found
        '401':
          description: Unauthorized

    delete:
      summary: Delete an artist by slug
      description: Remove an artist from the collection
      operationId: deleteArtistBySlug
      tags:
        - Artists
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
          example: teste
        - name: Username
          in: header
          required: true
          schema:
            type: string
          example: admin
        - name: Password
          in: header
          required: true
          schema:
            type: string
          example: 123
      responses:
        '204':
          description: Artist deleted successfully
        '404':
          description: Artist not found
        '401':
          description: Unauthorized


  /api/v1/releases:
    get:
      summary: Get all releases
      description: Fetch a list of all releases
      operationId: getReleases
      tags:
        - Releases
      responses:
        '200':
          description: A list of releases
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                    artist_id:
                      type: integer
                      example: 2
                    artist_name:
                      type: string
                      example: "Artist Name"
                    name:
                      type: string
                      example: "Release Name"
                    cover:
                      type: array
                      items:
                        type: string
                        example: "https://f4.bcbits.com/img/a1636189703_10.jpg"
                    release_type:
                      type: string
                      example: "Album"
                    release_date:
                      type: string
                      format: date
                      example: "2024-01-01"
                    label:
                      type: array
                      items:
                        type: string
                        example: "Label Name"
                    tracks:
                      type: array
                      items:
                        type: string
                      example: 
                        - "Track 1"
                        - "Track 2"
                    format:
                      type: array
                      items:
                        type: string
                      example:
                      - "Format 1"
                      - "Format 2"
                    credits:
                      type: array
                      items:
                        type: object
                      example:
                          Musician Name:
                          - "Instrument Name"
                          - "Instrument Name 2"

    post:
      summary: Create a new release
      description: Add a new release to the database
      operationId: createRelease
      tags:
        - Releases
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                artist_id:
                  type: integer
                  example: 2
                artist_name:
                  type: string
                  example: "Artist Name"
                name:
                  type: string
                  example: "Release Name"
                cover:
                  type: array
                  items:
                    type: string
                  example:
                    - "https://f4.bcbits.com/img/a1636189703_10.jpg"
                release_type:
                  type: string
                  example: "Album"
                release_date:
                  type: string
                  format: date
                  example: "2024-01-01"
                label:
                  type: array
                  items:
                    type: string
                  example:
                    - "Label Name"
                tracks:
                  type: array
                  items:
                    type: string
                  example:
                    - "Track 1"
                    - "Track 2"
                format:
                  type: array
                  items:
                    type: string
                  example:
                    - "Format 1"
                    - "Format 2"
                credits:
                  type: array
                  items:
                    type: object
                  example:
                    - name: "Musician Name"
                      instruments:
                        - "Instrument Name"
                        - "Instrument Name 2"
                notes:
                  type: array
                  items:
                    type: string
                  example:
                    - "Note 1"
                    - "Note 2"
                links:
                  type: object
                  additionalProperties:
                    type: string
                  example:
                    Spotify: "https://spotify.com/link"
                    AppleMusic: "https://apple.com/link"
      responses:
        '201':
          description: Release created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  artist_id:
                    type: integer
                    example: 2
                  artist_name:
                    type: string
                    example: "Artist Name"
                  name:
                    type: string
                    example: "Release Name"
                  cover:
                    type: array
                    items:
                      type: string
                    example:
                      - "https://f4.bcbits.com/img/a1636189703_10.jpg"
                  release_type:
                    type: string
                    example: "Album"
                  release_date:
                    type: string
                    format: date
                    example: "2024-01-01"
                  label:
                    type: array
                    items:
                      type: string
                    example:
                      - "Label Name"
                  tracks:
                    type: array
                    items:
                      type: string
                    example:
                      - "Track 1"
                      - "Track 2"
                  format:
                    type: array
                    items:
                      type: string
                    example:
                      - "Format 1"
                      - "Format 2"
                  credits:
                    type: array
                    items:
                      type: object
                    example:
                      - name: "Musician Name"
                        instruments:
                          - "Instrument Name"
                          - "Instrument Name 2"
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                      - "Note 1"
                      - "Note 2"
                  links:
                    type: object
                    additionalProperties:
                      type: string
                    example:
                      Spotify: "https://spotify.com/link"
                      AppleMusic: "https://apple.com/link"
        '400':
          description: Bad Request - Invalid parameters

  /api/v1/releases/{slug}:
    get:
      summary: Get a release by slug
      description: Retrieve a specific release using its slug
      operationId: getReleaseBySlug
      tags:
        - Releases
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug of the release to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A specific release
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  artist_id:
                    type: integer
                    example: 2
                  artist_name:
                    type: string
                    example: "Artist Name"
                  name:
                    type: string
                    example: "Release Name"
                  cover:
                    type: array
                    items:
                      type: string
                    example:
                      - "https://f4.bcbits.com/img/a1636189703_10.jpg"
                  release_type:
                    type: string
                    example: "Album"
                  release_date:
                    type: string
                    format: date
                    example: "2024-01-01"
                  label:
                    type: array
                    items:
                      type: string
                    example:
                      - "Label Name"
                  tracks:
                    type: array
                    items:
                      type: string
                    example:
                      - "Track 1"
                      - "Track 2"
                  format:
                    type: array
                    items:
                      type: string
                    example:
                      - "Format 1"
                      - "Format 2"
                  credits:
                    type: array
                    items:
                      type: object
                    example:
                      - name: "Musician Name"
                        instruments:
                          - "Instrument Name"
                          - "Instrument Name 2"
                  notes:
                    type: array
                    items:
                      type: string
                    example:
                      - "Note 1"
                      - "Note 2"
                  links:
                    type: object
                    additionalProperties:
                      type: string
                    example:
                      Spotify: "https://spotify.com/link"
                      AppleMusic: "https://apple.com/link"
        '404':
          description: Release not found
        '400':
          description: Bad Request - Invalid parameters

    put:
      summary: Update a release by slug
      description: Update an existing release using its slug
      operationId: updateReleaseBySlug
      tags:
        - Releases
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug of the release to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "TESTE_EDITADO"
      responses:
        '200':
          description: Release updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "TESTE_EDITADO"
                  slug:
                    type: string
                    example: "92-teste"
        '404':
          description: Release not found
        '400':
          description: Bad Request - Invalid parameters

    delete:
      summary: Delete a release by slug
      description: Delete a specific release using its slug
      operationId: deleteReleaseBySlug
      tags:
        - Releases
      parameters:
        - name: slug
          in: path
          required: true
          description: Slug of the release to delete
          schema:
            type: string
      responses:
        '204':
          description: Release deleted successfully
        '404':
          description: Release not found
        '400':
          description: Bad Request - Invalid parameters



  /api/v1/featurings:
    get:
      summary: Get all featurings
      description: Fetch a list of all featurings
      operationId: getFeaturings
      tags:
        - Featurings
      parameters:
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of featurings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                    name:
                      type: string
                      example: Featuring Name
                    is_album:
                      type: boolean
                      example: false
                    artist:
                      type: string
                      example: Featuring Artist Name
                    label:
                      type: string
                      example: Featuring Label Name
                    info:
                      type: string
                      example: Featuring Info
                    release_date:
                      type: string
                      format: date
                      example: "2020-01-01"
                    credit:
                      type: array
                      items:
                        type: string
                      example:
                        - "Featuring Credit 1"
                        - "Featuring Credit 2"
                    url:
                      type: string
                      example: "https://link.com"

    post:
      summary: Create a featuring
      description: Create a new featuring
      operationId: createFeaturing
      tags:
        - Featurings
      parameters:
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: TESTE
                is_album:
                  type: boolean
                  example: true
                artist:
                  type: string
                  example: TESTE
                label:
                  type: string
                  example: Pug Records
                info:
                  type: string
                  nullable: true
                release_date:
                  type: string
                  format: date
                  example: "2018-11-07"
                credit:
                  type: array
                  items:
                    type: string
                  example:
                    - "Producer"
      responses:
        '201':
          description: Featuring created successfully
        '400':
          description: Invalid input

  /api/v1/featurings/{slug}:
    get:
      summary: Get a featuring by ID
      description: Fetch details of a specific featuring
      operationId: getFeaturingById
      tags:
        - Featurings
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of a specific featuring
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 6
                  name:
                    type: string
                    example: TESTE
                  is_album:
                    type: boolean
                    example: true
                  artist:
                    type: string
                    example: TESTE
                  label:
                    type: string
                    example: Pug Records
                  info:
                    type: string
                    nullable: true
                  release_date:
                    type: string
                    format: date
                    example: "2018-11-07"
                  credit:
                    type: array
                    items:
                      type: string
                    example:
                      - "Producer"
        '404':
          description: Featuring not found

    put:
      summary: Update a featuring
      description: Update an existing featuring's information
      operationId: updateFeaturing
      tags:
        - Featurings
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  example: LABEL TESTE BLA
      responses:
        '200':
          description: Featuring updated successfully
        '400':
          description: Invalid input
        '404':
          description: Featuring not found

    delete:
      summary: Delete a featuring
      description: Delete an existing featuring by ID
      operationId: deleteFeaturing
      tags:
        - Featurings
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Featuring deleted successfully
        '404':
          description: Featuring not found


  /api/v1/soundtracks:
    get:
      summary: Get all soundtracks
      description: Fetch a list of all soundtracks
      operationId: getSoundtracks
      tags:
        - Soundtracks
      parameters:
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of soundtracks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                    name:
                      type: string
                      example: Soundtrack Name
                    company:
                      type: string
                      example: Soundtrack Company
                    info:
                      type: string
                      example: Soundtrack Info
                    year:
                      type: string
                      example: "2020"
                    kind:
                      type: string
                      example: Ad
                    url:
                      type: string
                      example: "https://link.com"

    post:
      summary: Create a soundtrack
      description: Create a new soundtrack
      operationId: createSoundtrack
      tags:
        - Soundtracks
      parameters:
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: TESTE
                company:
                  type: string
                  example: Globo
                info:
                  type: string
                  example: Lalalla.
                year:
                  type: string
                  example: "2014"
                kind:
                  type: string
                  example: Ad
                url:
                  type: string
                  example: "https://vimeo.com/262298052"
      responses:
        '201':
          description: Soundtrack created successfully
        '400':
          description: Invalid input

  /api/v1/soundtracks/{slug}:
    get:
      summary: Get a soundtrack by ID
      description: Fetch details of a specific soundtrack
      operationId: getSoundtrackById
      tags:
        - Soundtracks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of a specific soundtrack
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 7
                  name:
                    type: string
                    example: Soundtrack Name
                  company:
                    type: string
                    example: Soundtrack Company
                  info:
                    type: string
                    example: Soundtrack Info
                  year:
                    type: string
                    example: "2020"
                  kind:
                    type: string
                    example: Ad
                  url:
                    type: string
                    example: "https://link.com"
        '404':
          description: Soundtrack not found

    put:
      summary: Update a soundtrack
      description: Update an existing soundtrack's information
      operationId: updateSoundtrack
      tags:
        - Soundtracks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: TESTE EDIT
      responses:
        '200':
          description: Soundtrack updated successfully
        '400':
          description: Invalid input
        '404':
          description: Soundtrack not found

    delete:
      summary: Delete a soundtrack
      description: Delete an existing soundtrack by ID
      operationId: deleteSoundtrack
      tags:
        - Soundtracks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
        - in: header
          name: Username
          required: true
          schema:
            type: string
        - in: header
          name: Password
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Soundtrack deleted successfully
        '404':
          description: Soundtrack not found

    /api/v1/songs:
      get:
        summary: Get all songs
        description: Fetch a list of all songs
        operationId: getSongs
        tags:
          - Songs
        responses:
          '200':
            description: A list of songs
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: Song Name
                      slug:
                        type: string
                        example: song-name
                      duration:
                        type: string
                        example: "3:37"
                      url:
                        type: string
                        example: "https://link.com"


  /api/v1/songs:
    get:
      summary: Get all songs
      description: Fetch a list of all songs
      operationId: getSongs
      tags:
        - Songs
      responses:
        '200':
          description: A list of songs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                    name:
                      type: string
                      example: Song Name
                    slug:
                      type: string
                      example: song-name
                    duration:
                      type: string
                      example: "3:37"
                    url:
                      type: string
                      example: "https://link.com"

  /api/v1/{artist}/{song}:
    get:
      summary: Get a song by slug
      description: Fetch a song
      operationId: getSong
      tags:
        - Songs
      responses:
        '200':
          description: A list of songs
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: Song Name
                  slug:
                    type: string
                    example: song-name
                  duration:
                    type: string
                    example: "3:37"
                  url:
                    type: string
                    example: "https://link.com"