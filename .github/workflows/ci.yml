name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Docker Compose
    - name: Set up Docker
      env:
        GPGC_API_DATABASE_USERNAME: gpgc_api
        GPGC_API_DATABASE_PASSWORD: 1310gpgc
        GPGC_API_DATABASE_NAME: gpgc_api_test
        GPGC_API_DATABASE_HOST: db
      run: |
        docker compose down --volumes # Clean up any stale containers
        docker compose build          # Build all services

    # Step 3: Debug Networking
    - name: Debug Networking
      run: docker compose run rspec ping -c 4 db

    # Step 4: Wait for Database
    - name: Wait for Database
      env:
        GPGC_API_DATABASE_USERNAME: gpgc_api
        GPGC_API_DATABASE_HOST: db
      run: |
        echo "Waiting for the database to be ready..."
        docker compose run rspec bash -c "until pg_isready -h $GPGC_API_DATABASE_HOST -U $GPGC_API_DATABASE_USERNAME --timeout=5; do sleep 5; done"

    # Step 5: Prepare Test Database
    - name: Prepare Test Database
      env:
        GPGC_API_DATABASE_USERNAME: gpgc_api
        GPGC_API_DATABASE_PASSWORD: 1310gpgc
        GPGC_API_DATABASE_NAME: gpgc_api_test
        GPGC_API_DATABASE_HOST: db
      run: |
        docker compose run rspec rails db:environment:set RAILS_ENV=test
        docker compose run rspec rails db:create
        docker compose run rspec rails db:migrate

    # Step 6: Run Tests
    - name: Run Tests
      env:
        GPGC_API_DATABASE_USERNAME: gpgc_api
        GPGC_API_DATABASE_PASSWORD: 1310gpgc
        GPGC_API_DATABASE_NAME: gpgc_api_test
        GPGC_API_DATABASE_HOST: db
      run: docker compose run rspec

    # Step 7: Tear Down Docker
    - name: Tear Down
      if: always()
      run: docker compose down --volumes
