name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        ports:
          - 5433:5432 # Map the database to port 5433 to avoid conflicts
        env:
          POSTGRES_USER: gpgc_api
          POSTGRES_PASSWORD: 1310gpgc
          POSTGRES_DB: gpgc_api_test
        options: >-
          --health-cmd="pg_isready -U gpgc_api"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    # Step 1: Check out the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Docker Compose
    - name: Set up Docker
      run: |
        docker compose down --volumes # Clean up any existing containers
        docker compose build          # Build the Docker images

    # Step 3: Set up the database
    - name: Prepare Test Database
      env:
        DATABASE_URL: "postgresql://gpgc_api:1310gpgc@localhost:5433/gpgc_api_test" # Ensure proper formatting
      run: |
        docker compose run web rails db:environment:set RAILS_ENV=test
        docker compose run web rails db:create
        docker compose run web rails db:migrate

    # Step 4: Run Tests
    - name: Run Tests
      env:
        DATABASE_URL: "postgresql://gpgc_api:1310gpgc@localhost:5433/gpgc_api_test" # Ensure proper formatting
      run: docker compose run rspec

    # Step 5: Tear Down Docker
    - name: Tear Down
      if: always()
      run: docker compose down --volumes
